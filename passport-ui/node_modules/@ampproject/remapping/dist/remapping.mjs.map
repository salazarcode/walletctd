{"version":3,"file":"remapping.mjs","sources":["../node_modules/sourcemap-codec/src/sourcemap-codec.ts","../src/defaults.ts","../src/decode-source-map.ts","../src/original-source.ts","../node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts","../src/resolve.ts","../src/binary-search.ts","../src/fast-string-array.ts","../src/source-map-tree.ts","../src/strip-filename.ts","../src/build-source-map-tree.ts","../src/source-map.ts","../src/remapping.ts"],"sourcesContent":["export type SourceMapSegment =\n\t| [number]\n\t| [number, number, number, number]\n\t| [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst charToInteger: { [charCode: number]: number } = {};\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfor (let i = 0; i < chars.length; i++) {\n\tcharToInteger[chars.charCodeAt(i)] = i;\n}\n\nexport function decode(mappings: string): SourceMapMappings {\n\tconst decoded: SourceMapMappings = [];\n\tlet line: SourceMapLine = [];\n\tconst segment: SourceMapSegment = [\n\t\t0, // generated code column\n\t\t0, // source file index\n\t\t0, // source code line\n\t\t0, // source code column\n\t\t0, // name index\n\t];\n\n\tlet j = 0;\n\tfor (let i = 0, shift = 0, value = 0; i < mappings.length; i++) {\n\t\tconst c = mappings.charCodeAt(i);\n\n\t\tif (c === 44) { // \",\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\n\t\t} else if (c === 59) { // \";\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\t\t\tdecoded.push(line);\n\t\t\tline = [];\n\t\t\tsegment[0] = 0;\n\n\t\t} else {\n\t\t\tlet integer = charToInteger[c];\n\t\t\tif (integer === undefined) {\n\t\t\t\tthrow new Error('Invalid character (' + String.fromCharCode(c) + ')');\n\t\t\t}\n\n\t\t\tconst hasContinuationBit = integer & 32;\n\n\t\t\tinteger &= 31;\n\t\t\tvalue += integer << shift;\n\n\t\t\tif (hasContinuationBit) {\n\t\t\t\tshift += 5;\n\t\t\t} else {\n\t\t\t\tconst shouldNegate = value & 1;\n\t\t\t\tvalue >>>= 1;\n\n\t\t\t\tif (shouldNegate) {\n\t\t\t\t\tvalue = value === 0 ? -0x80000000 : -value;\n\t\t\t\t}\n\n\t\t\t\tsegment[j] += value;\n\t\t\t\tj++;\n\t\t\t\tvalue = shift = 0; // reset\n\t\t\t}\n\t\t}\n\t}\n\n\tsegmentify(line, segment, j);\n\tdecoded.push(line);\n\n\treturn decoded;\n}\n\nfunction segmentify(line: SourceMapSegment[], segment: SourceMapSegment, j: number) {\n\t// This looks ugly, but we're creating specialized arrays with a specific\n\t// length. This is much faster than creating a new array (which v8 expands to\n\t// a capacity of 17 after pushing the first item), or slicing out a subarray\n\t// (which is slow). Length 4 is assumed to be the most frequent, followed by\n\t// length 5 (since not everything will have an associated name), followed by\n\t// length 1 (it's probably rare for a source substring to not have an\n\t// associated segment data).\n\tif (j === 4) line.push([segment[0], segment[1], segment[2], segment[3]]);\n\telse if (j === 5) line.push([segment[0], segment[1], segment[2], segment[3], segment[4]]);\n\telse if (j === 1) line.push([segment[0]]);\n}\n\nexport function encode(decoded: SourceMapMappings): string {\n\tlet sourceFileIndex = 0;  // second field\n\tlet sourceCodeLine = 0;   // third field\n\tlet sourceCodeColumn = 0; // fourth field\n\tlet nameIndex = 0;        // fifth field\n\tlet mappings = '';\n\n\tfor (let i = 0; i < decoded.length; i++) {\n\t\tconst line = decoded[i];\n\t\tif (i > 0) mappings += ';';\n\t\tif (line.length === 0) continue;\n\n\t\tlet generatedCodeColumn = 0; // first field\n\n\t\tconst lineMappings: string[] = [];\n\n\t\tfor (const segment of line) {\n\t\t\tlet segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n\t\t\tgeneratedCodeColumn = segment[0];\n\n\t\t\tif (segment.length > 1) {\n\t\t\t\tsegmentMappings +=\n\t\t\t\t\tencodeInteger(segment[1] - sourceFileIndex) +\n\t\t\t\t\tencodeInteger(segment[2] - sourceCodeLine) +\n\t\t\t\t\tencodeInteger(segment[3] - sourceCodeColumn);\n\n\t\t\t\tsourceFileIndex = segment[1];\n\t\t\t\tsourceCodeLine = segment[2];\n\t\t\t\tsourceCodeColumn = segment[3];\n\t\t\t}\n\n\t\t\tif (segment.length === 5) {\n\t\t\t\tsegmentMappings += encodeInteger(segment[4] - nameIndex);\n\t\t\t\tnameIndex = segment[4];\n\t\t\t}\n\n\t\t\tlineMappings.push(segmentMappings);\n\t\t}\n\n\t\tmappings += lineMappings.join(',');\n\t}\n\n\treturn mappings;\n}\n\nfunction encodeInteger(num: number): string {\n\tvar result = '';\n\tnum = num < 0 ? (-num << 1) | 1 : num << 1;\n\tdo {\n\t\tvar clamped = num & 31;\n\t\tnum >>>= 5;\n\t\tif (num > 0) {\n\t\t\tclamped |= 32;\n\t\t}\n\t\tresult += chars[clamped];\n\t} while (num > 0);\n\n\treturn result;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Creates a brand new (prototype-less) object with the enumerable-own\n * properties of `target`. Any enumerable-own properties from `source` which\n * are not present on `target` will be copied as well.\n */\nexport default function defaults<T, U>(target: T, source: U): T & U {\n  return Object.assign(Object.create(null), source, target) as T & U;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decode } from 'sourcemap-codec';\nimport defaults from './defaults';\nimport { DecodedSourceMap, RawSourceMap, SourceMapInput, SourceMapSegment } from './types';\n\n/**\n * Decodes an input sourcemap into a `DecodedSourceMap` sourcemap object.\n *\n * Valid input maps include a `DecodedSourceMap`, a `RawSourceMap`, or JSON\n * representations of either type.\n */\nexport default function decodeSourceMap(map: SourceMapInput): DecodedSourceMap {\n  if (typeof map === 'string') {\n    map = JSON.parse(map) as DecodedSourceMap | RawSourceMap;\n  }\n\n  let { mappings } = map;\n  if (typeof mappings === 'string') {\n    mappings = decode(mappings);\n  } else {\n    // Clone the Line so that we can sort it. We don't want to mutate an array\n    // that we don't own directly.\n    mappings = mappings.map(cloneSegmentLine);\n  }\n  // Sort each Line's segments. There's no guarantee that segments are sorted for us,\n  // and even Chrome's implementation sorts:\n  // https://cs.chromium.org/chromium/src/third_party/devtools-frontend/src/front_end/sdk/SourceMap.js?l=507-508&rcl=109232bcf479c8f4ef8ead3cf56c49eb25f8c2f0\n  mappings.forEach(sortSegments);\n\n  return defaults({ mappings }, map);\n}\n\nfunction cloneSegmentLine(segments: SourceMapSegment[]): SourceMapSegment[] {\n  return segments.slice();\n}\n\nfunction sortSegments(segments: SourceMapSegment[]): void {\n  segments.sort(segmentComparator);\n}\n\nfunction segmentComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SourceMapSegmentObject } from './types';\n\n/**\n * A \"leaf\" node in the sourcemap tree, representing an original, unmodified\n * source file. Recursive segment tracing ends at the `OriginalSource`.\n */\nexport default class OriginalSource {\n  content: string | null;\n  filename: string;\n\n  constructor(filename: string, content: string | null) {\n    this.filename = filename;\n    this.content = content;\n  }\n\n  /**\n   * Tracing a `SourceMapSegment` ends when we get to an `OriginalSource`,\n   * meaning this line/column location originated from this source file.\n   */\n  traceSegment(line: number, column: number, name: string): SourceMapSegmentObject {\n    return { column, line, name, source: this };\n  }\n}\n","type WhatWgUrl = import('url').URL;\ninterface Url extends WhatWgUrl {\n  new (input: string, base?: string): WhatWgUrl;\n}\ndeclare var URL: unknown;\n\n/* istanbul ignore next */\nconst Url = (typeof URL !== 'undefined' ? URL : require('url').URL) as Url;\n\n// Matches \"..\", which must be preceeded by \"/\" or the start of the string, and\n// must be followed by a \"/\". We do not eat the following \"/\", so that the next\n// iteration can match on it.\nconst parentRegex = /(^|\\/)\\.\\.(?=\\/|$)/g;\n\nfunction isAbsoluteUrl(url: string): boolean {\n  try {\n    return !!new Url(url);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Creates a directory name that is guaranteed to not be in `str`.\n */\nfunction uniqInStr(str: string): string {\n  let uniq = String(Math.random()).slice(2);\n  while (str.indexOf(uniq) > -1) {\n    /* istanbul ignore next */\n    uniq += uniq;\n  }\n  return uniq;\n}\n\n/**\n * Removes the filename from the path (everything trailing the last \"/\"). This\n * is only safe to call on a path, never call with an absolute or protocol\n * relative URL.\n */\nfunction stripPathFilename(path: string): string {\n  path = normalizePath(path);\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\n/**\n * Normalizes a protocol-relative URL, but keeps it protocol relative by\n * stripping out the protocl before returning it.\n */\nfunction normalizeProtocolRelative(input: string, absoluteBase: string): string {\n  const { href, protocol } = new Url(input, absoluteBase);\n  return href.slice(protocol.length);\n}\n\n/**\n * Normalizes a simple path (one that has no \"..\"s, or is absolute so \"..\"s can\n * be normalized absolutely).\n */\nfunction normalizeSimplePath(input: string): string {\n  const { href } = new Url(input, 'https://foo.com/');\n  return href.slice('https://foo.com/'.length);\n}\n\n/**\n * Normalizes a path, ensuring that excess \"..\"s are preserved for relative\n * paths in the output.\n *\n * If the input is absolute, this will return an absolutey normalized path, but\n * it will not have a leading \"/\".\n *\n * If the input has a leading \"..\", the output will have a leading \"..\".\n *\n * If the input has a leading \".\", the output will not have a leading \".\"\n * unless there are too many \"..\"s, in which case there will be a leading \"..\".\n */\nfunction normalizePath(input: string): string {\n  // If there are no \"..\"s, we can treat this as if it were an absolute path.\n  // The return won't be an absolute path, so it's easy.\n  if (!parentRegex.test(input)) return normalizeSimplePath(input);\n\n  // We already found one \"..\". Let's see how many there are.\n  let total = 1;\n  while (parentRegex.test(input)) total++;\n\n  // If there are \"..\"s, we need to prefix the the path with the same number of\n  // unique directories. This is to ensure that we \"remember\" how many parent\n  // directories we are accessing. Eg, \"../../..\" must keep 3, and \"foo/../..\"\n  // must keep 1.\n  const uniqDirectory = `z${uniqInStr(input)}/`;\n\n  // uniqDirectory is just a \"z\", followed by numbers, followed by a \"/\". So\n  // generating a runtime regex from it is safe. We'll use this search regex to\n  // strip out our uniq directory names and insert any needed \"..\"s.\n  const search = new RegExp(`^(?:${uniqDirectory})*`);\n\n  // Now we can resolve the total path. If there are excess \"..\"s, they will\n  // eliminate one or more of the unique directories we prefix with.\n  const relative = normalizeSimplePath(uniqDirectory.repeat(total) + input);\n\n  // We can now count the number of unique directories that were eliminated. If\n  // there were 3, and 1 was eliminated, we know we only need to add 1 \"..\". If\n  // 2 were eliminated, we need to insert 2 \"..\"s. If all 3 were eliminated,\n  // then we need 3, etc. This replace is guranteed to match (it may match 0 or\n  // more times), and we can count the total match to see how many were eliminated.\n  return relative.replace(search, (all: string) => {\n    const leftover = all.length / uniqDirectory.length;\n    return '../'.repeat(total - leftover);\n  });\n}\n\n/**\n * Attempts to resolve `input` URL relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!base) base = '';\n\n  // Absolute URLs are very easy to resolve right.\n  if (isAbsoluteUrl(input)) return new Url(input).href;\n\n  if (base) {\n    // Absolute URLs are easy...\n    if (isAbsoluteUrl(base)) return new Url(input, base).href;\n\n    // If base is protocol relative, we'll resolve with it but keep the result\n    // protocol relative.\n    if (base.startsWith('//')) return normalizeProtocolRelative(input, `https:${base}`);\n  }\n\n  // Normalize input, but keep it protocol relative. We know base doesn't supply\n  // a protocol, because that would have been handled above.\n  if (input.startsWith('//')) return normalizeProtocolRelative(input, 'https://foo.com/');\n\n  // We now know that base (if there is one) and input are paths. We've handled\n  // both absolute and protocol-relative variations above.\n\n  // Absolute paths don't need any special handling, because they cannot have\n  // extra \".\" or \"..\"s. That'll all be stripped away. Input takes priority here,\n  // because if input is an absolute path, base path won't affect it in any way.\n  if (input.startsWith('/')) return '/' + normalizeSimplePath(input);\n\n  // Since input and base are paths, we need to join them to do any further\n  // processing. Paths are joined at the directory level, so we need to remove\n  // the base's filename before joining. We also know that input does not have a\n  // leading slash, and that the stripped base will have a trailing slash if\n  // there are any directories (or it'll be empty).\n  const joined = stripPathFilename(base) + input;\n\n  // If base is an absolute path, then input will be relative to it.\n  if (base.startsWith('/')) return '/' + normalizeSimplePath(joined);\n\n  // We now know both base (if there is one) and input are relative paths.\n  const relative = normalizePath(joined);\n\n  // If base started with a leading \".\", or there is no base and input started\n  // with a \".\", then we need to ensure that the relative path starts with a\n  // \".\". We don't know if relative starts with a \"..\", though, so check before\n  // prepending.\n  if ((base || input).startsWith('.') && !relative.startsWith('.')) {\n    return './' + relative;\n  }\n\n  return relative;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport resolveUri from '@jridgewell/resolve-uri';\n\nexport default function resolve(input: string, base: string | undefined): string {\n  // The base is always treated as a directory, if it's not empty.\n  // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n  // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n  if (base && !base.endsWith('/')) base += '/';\n\n  return resolveUri(input, base);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A binary search implementation that returns the index if a match is found,\n * or the negated index of where the `needle` should be inserted.\n *\n * The `comparator` callback receives both the `item` under comparison and the\n * needle we are searching for. It must return `0` if the `item` is a match,\n * any negative number if `item` is too small (and we must search after it), or\n * any positive number if the `item` is too large (and we must search before\n * it).\n *\n * If no match is found, a negated index of where to insert the `needle` is\n * returned. This negated index is guaranteed to be less than 0. To insert an\n * item, negate it (again) and splice:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, -2);\n * assert.equal(~index, 1);\n * array.splice(~index, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nexport default function binarySearch<T, S>(\n  haystack: ArrayLike<T>,\n  needle: S,\n  comparator: (item: T, needle: S) => number\n): number {\n  let low = 0;\n  let high = haystack.length - 1;\n\n  while (low <= high) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = comparator(haystack[mid], needle);\n\n    if (cmp === 0) {\n      return mid;\n    }\n\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  return ~low;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FastStringArray acts like a `Set` (allowing only one occurrence of a string\n * `key`), but provides the index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of\n * the backing array, like how `sourcesContent[i]` is the source content\n * associated with `source[i]`, and there are never duplicates.\n */\nexport default class FastStringArray {\n  private indexes: { [key: string]: number };\n  array: ReadonlyArray<string>;\n\n  constructor() {\n    this.indexes = Object.create(null) as { [key: string]: number };\n    this.array = [];\n  }\n\n  /**\n   * Puts `key` into the backing array, if it is not already present. Returns\n   * the index of the `key` in the backing array.\n   */\n  put(key: string): number {\n    const { array, indexes } = this;\n    // The key may or may not be present. If it is present, it's a number.\n    let index = indexes[key] as number | undefined;\n\n    // If it's not yet present, we need to insert it and track the index in the\n    // indexes.\n    if (index === undefined) {\n      index = indexes[key] = array.length;\n      (array as string[]).push(key);\n    }\n\n    return index;\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport binarySearch from './binary-search';\nimport defaults from './defaults';\nimport FastStringArray from './fast-string-array';\nimport OriginalSource from './original-source';\nimport { DecodedSourceMap, SourceMapSegment, SourceMapSegmentObject } from './types';\n\ntype Sources = OriginalSource | SourceMapTree;\n\n/**\n * SourceMapTree represents a single sourcemap, with the ability to trace\n * mappings into its child nodes (which may themselves be SourceMapTrees).\n */\nexport default class SourceMapTree {\n  map: DecodedSourceMap;\n  sources: Sources[];\n\n  constructor(map: DecodedSourceMap, sources: Sources[]) {\n    this.map = map;\n    this.sources = sources;\n  }\n\n  /**\n   * traceMappings is only called on the root level SourceMapTree, and begins\n   * the process of resolving each mapping in terms of the original source\n   * files.\n   */\n  traceMappings(): DecodedSourceMap {\n    const mappings: SourceMapSegment[][] = [];\n    const names = new FastStringArray();\n    const sources = new FastStringArray();\n    const sourcesContent: (string | null)[] = [];\n    const { mappings: rootMappings, names: rootNames } = this.map;\n\n    for (let i = 0; i < rootMappings.length; i++) {\n      const segments = rootMappings[i];\n      const tracedSegments: SourceMapSegment[] = [];\n\n      for (let j = 0; j < segments.length; j++) {\n        const segment = segments[j];\n\n        // 1-length segments only move the current generated column, there's no\n        // source information to gather from it.\n        if (segment.length === 1) continue;\n        const source = this.sources[segment[1]];\n\n        const traced = source.traceSegment(\n          segment[2],\n          segment[3],\n          segment.length === 5 ? rootNames[segment[4]] : ''\n        );\n        if (!traced) continue;\n\n        // So we traced a segment down into its original source file. Now push a\n        // new segment pointing to this location.\n        const { column, line, name } = traced;\n        const { content, filename } = traced.source;\n\n        // Store the source location, and ensure we keep sourcesContent up to\n        // date with the sources array.\n        const sourceIndex = sources.put(filename);\n        sourcesContent[sourceIndex] = content;\n\n        // This looks like unnecessary duplication, but it noticeably increases\n        // performance. If we were to push the nameIndex onto length-4 array, v8\n        // would internally allocate 22 slots! That's 68 wasted bytes! Array\n        // literals have the same capacity as their length, saving memory.\n        if (name) {\n          tracedSegments.push([segment[0], sourceIndex, line, column, names.put(name)]);\n        } else {\n          tracedSegments.push([segment[0], sourceIndex, line, column]);\n        }\n      }\n\n      mappings.push(tracedSegments);\n    }\n\n    // TODO: Make all sources relative to the sourceRoot.\n\n    return defaults(\n      {\n        mappings,\n        names: names.array,\n        sources: sources.array,\n        sourcesContent,\n      },\n      this.map\n    );\n  }\n\n  /**\n   * traceSegment is only called on children SourceMapTrees. It recurses down\n   * into its own child SourceMapTrees, until we find the original source map.\n   */\n  traceSegment(line: number, column: number, name: string): SourceMapSegmentObject | null {\n    const { mappings, names } = this.map;\n\n    // It's common for parent sourcemaps to have pointers to lines that have no\n    // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n    if (line >= mappings.length) return null;\n\n    const segments = mappings[line];\n    const index = binarySearch(segments, column, segmentComparator);\n\n    // If we can't find an segment that lines up to this column, then we can't\n    // trace it further.\n    if (index < 0) return null;\n    const segment = segments[index];\n\n    // 1-length segments only move the current generated column, there's no\n    // source information to gather from it.\n    if (segment.length === 1) return null;\n    const source = this.sources[segment[1]];\n\n    // So now we can recurse down, until we hit the original source file.\n    return source.traceSegment(\n      segment[2],\n      segment[3],\n      // A child map's recorded name for this segment takes precedence over the\n      // parent's mapped name. Imagine a mangler changing the name over, etc.\n      segment.length === 5 ? names[segment[4]] : name\n    );\n  }\n}\n\nfunction segmentComparator(segment: SourceMapSegment, column: number): number {\n  return segment[0] - column;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Removes the filename from a path.\n */\nexport default function stripFilename(path: string | undefined): string {\n  if (!path) return '';\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport decodeSourceMap from './decode-source-map';\nimport OriginalSource from './original-source';\nimport resolve from './resolve';\nimport SourceMapTree from './source-map-tree';\nimport stripFilename from './strip-filename';\nimport { SourceMapInput, SourceMapLoader } from './types';\n\nfunction asArray<T>(value: T | T[]): T[] {\n  if (Array.isArray(value)) return value;\n  return [value];\n}\n\n/**\n * Recursively builds a tree structure out of sourcemap files, with each node\n * being either an `OriginalSource` \"leaf\" or a `SourceMapTree` composed of\n * `OriginalSource`s and `SourceMapTree`s.\n *\n * Every sourcemap is composed of a collection of source files and mappings\n * into locations of those source files. When we generate a `SourceMapTree` for\n * the sourcemap, we attempt to load each source file's own sourcemap. If it\n * does not have an associated sourcemap, it is considered an original,\n * unmodified source file.\n */\nexport default function buildSourceMapTree(\n  input: SourceMapInput | SourceMapInput[],\n  loader: SourceMapLoader,\n  relativeRoot?: string\n): SourceMapTree {\n  const maps = asArray(input).map(decodeSourceMap);\n  const map = maps.pop()!;\n\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].sources.length !== 1) {\n      throw new Error(\n        `Transformation map ${i} must have exactly one source file.\\n` +\n          'Did you specify these with the most recent transformation maps first?'\n      );\n    }\n  }\n\n  const { sourceRoot, sources, sourcesContent } = map;\n\n  const children = sources.map((sourceFile: string | null, i: number) => {\n    // Each source file is loaded relative to the sourcemap's own sourceRoot,\n    // which is itself relative to the sourcemap's parent.\n    const uri = resolve(sourceFile || '', resolve(sourceRoot || '', stripFilename(relativeRoot)));\n\n    // Use the provided loader callback to retrieve the file's sourcemap.\n    // TODO: We should eventually support async loading of sourcemap files.\n    const sourceMap = loader(uri);\n\n    // If there is no sourcemap, then it is an unmodified source file.\n    if (!sourceMap) {\n      // The source file's actual contents must be included in the sourcemap\n      // (done when generating the sourcemap) for it to be included as a\n      // sourceContent in the output sourcemap.\n      const sourceContent = sourcesContent ? sourcesContent[i] : null;\n      return new OriginalSource(uri, sourceContent);\n    }\n\n    // Else, it's a real sourcemap, and we need to recurse into it to load its\n    // source files.\n    return buildSourceMapTree(decodeSourceMap(sourceMap), loader, uri);\n  });\n\n  let tree = new SourceMapTree(map, children);\n  for (let i = maps.length - 1; i >= 0; i--) {\n    tree = new SourceMapTree(maps[i], [tree]);\n  }\n  return tree;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { encode } from 'sourcemap-codec';\nimport { DecodedSourceMap, RawSourceMap } from './types';\n\n/**\n * A SourceMap v3 compatible sourcemap, which only includes fields that were\n * provided to it.\n */\nexport default class SourceMap implements RawSourceMap {\n  file?: string | null;\n  mappings: string;\n  sourceRoot?: string;\n  names: string[];\n  sources: (string | null)[];\n  sourcesContent?: (string | null)[];\n  version: 3;\n\n  constructor(map: DecodedSourceMap, excludeContent: boolean) {\n    this.version = 3; // SourceMap spec says this should be first.\n    if ('file' in map) this.file = map.file;\n    this.mappings = encode(map.mappings);\n    this.names = map.names;\n\n    // TODO: We first need to make all source URIs relative to the sourceRoot\n    // before we can support a sourceRoot.\n    // if ('sourceRoot' in map) this.sourceRoot = map.sourceRoot;\n\n    this.sources = map.sources;\n    if (!excludeContent && 'sourcesContent' in map) this.sourcesContent = map.sourcesContent;\n  }\n\n  toString(): string {\n    return JSON.stringify(this);\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport buildSourceMapTree from './build-source-map-tree';\nimport SourceMap from './source-map';\nimport { SourceMapInput, SourceMapLoader } from './types';\n\n/**\n * Traces through all the mappings in the root sourcemap, through the sources\n * (and their sourcemaps), all the way back to the original source location.\n *\n * `loader` will be called every time we encounter a source file. If it returns\n * a sourcemap, we will recurse into that sourcemap to continue the trace. If\n * it returns a falsey value, that source file is treated as an original,\n * unmodified source file.\n *\n * Pass `excludeContent` content to exclude any self-containing source file\n * content from the output sourcemap.\n */\nexport default function remapping(\n  input: SourceMapInput | SourceMapInput[],\n  loader: SourceMapLoader,\n  excludeContent?: boolean\n): SourceMap {\n  const graph = buildSourceMapTree(input, loader);\n  return new SourceMap(graph.traceMappings(), !!excludeContent);\n}\n"],"names":["resolve","resolveUri","segmentComparator"],"mappings":"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"}